**Get it Done, Make it Better, Share the Best -- Talse**
**I). Sliding Window**
| O(T): O(n) | O(S): O(1) | Rt: 28ms | 
```python
    def findOcurrences(self, text: str, first: str, second: str) -> List[str]:
        arr = text.split()
        return [arr[i+2] for i in range(len(arr) - 2) if arr[i] == first and arr[i+1] == second]
```


**II). General for Kgram**
| O(T): O(n) | O(S): O(1) | Rt: 28ms | 
```python
    def findOcurrences(self, text: str, first: str, second: str) -> List[str]:
        ind, k, seq = 0, 2, [first, second]
        rst, arr = [], text.split()
        for i in range(len(arr) - 1):
            if arr[i] == seq[ind]: 
                ind += 1
                if ind == k:
                    rst.append(arr[i+1])
                    ind = 0
            else: ind = 1 if arr[i] == seq[0] else 0
        return rst
```


**III). Letter by Letter Match**
| O(T): O(n) | O(S): O(n) | Rt: 20ms | 
```python
    def findOcurrences(self, text: str, first: str, second: str) -> List[str]:
        def getnextword(i, text, r):
            j = i
            while j < r and text[j] != ' ': j += 1
            return text[i: j]
                
        ind, seq = 0, first + ' ' + second + ' '
        rst, k, l = [], len(seq), len(text)
        for i in range(len(text)):
            if text[i] == seq[ind]: 
                ind += 1
                if ind == k:
                    rst.append(getnextword(i+1, text, l))
                    ind = 0
            else: ind = 1 if text[i] == seq[0] and i > 0 and text[i-1] == ' ' else 0
        return rst
```


