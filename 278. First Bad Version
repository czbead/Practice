**Get it Done, Make it Better, Share the Best -- Talse**
**I). Binary Search**
| O(t): O(lgn) | O(m): O(1) | Rt: 20ms | 
```python
    def firstBadVersion(self, n):
        l, r = 1, n+1
        while l < r:
            mid = l + (r - l) // 2
            if isBadVersion(mid): r = mid
            else: l = mid + 1
        return l
```
Alternative: | Rt: 28ms |
```python
    def firstBadVersion(self, n):
        l, r = 1, n
        while l <= r:
            mid = l + (r - l) // 2
            if isBadVersion(mid): r = mid - 1
            else: l = mid + 1
        return l
```
Comment: better use mid = l + (r - l) // 2 rather than mid = (l + r) // 2 to avoid overflow. Python is safe from overflow but it is not good to raise language-oriented habit when coding. I myself have that bad habit as well. From now, I will switch to the longish writting. As suggested By: https://leetcode.com/problems/first-bad-version/discuss/71311/A-good-warning-to-me-to-use-start%2B(end-start)2-to-avoid-overflow

