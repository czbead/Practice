**Get it Done, Make it Better, Share the Best -- Talse**
**I). Naive**
| O(T): O(n) | O(S): O(n) | Rt: 220ms | 
```python
    def intersect(self, quadTree1: 'Node', quadTree2: 'Node') -> 'Node':
        if quadTree1.isLeaf and quadTree1.val: return quadTree1
        elif quadTree1.isLeaf and not quadTree1.val: return quadTree2
        elif quadTree2.isLeaf and quadTree2.val: return quadTree2
        elif quadTree2.isLeaf and not quadTree2.val: return quadTree1
        
        tl = self.intersect(quadTree1.topLeft, quadTree2.topLeft)        
        tr = self.intersect(quadTree1.topRight, quadTree2.topRight)
        bl = self.intersect(quadTree1.bottomLeft, quadTree2.bottomLeft)
        br = self.intersect(quadTree1.bottomRight, quadTree2.bottomRight)
        
        if tl.isLeaf and tr.isLeaf and bl.isLeaf and br.isLeaf and tl.val == tr.val == bl.val == br.val:
            return Node(tl.val, True, None, None, None, None)
        return Node(False, False, tl, tr, bl, br)
```

