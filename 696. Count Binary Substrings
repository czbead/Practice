**Get it Done, Make it Better, Share the Best -- Talse**
**I). Two Counter**
| O(T): O(n) | O(S): O(1) | Rt: 124ms | 
```python
    def countBinarySubstrings(self, s: str) -> int:
        rst, a, b, cur = 0, 0, 0, s[0]
        for i in s:
            if i == cur: b += 1
            else:
                rst += min(a, b)
                a, b, cur = b, 1, i
        rst += min(a, b)
        return rst
```
Alternative: batch style. | Rt: 168ms |
```python
    def countBinarySubstrings(self, s: str) -> int:
        rst, cur, ct = [], s[0], 0
        for i in s:
            if i == cur: ct += 1
            else:
                rst.append(ct)
                cur, ct = i, 1
        rst.append(ct)
        return sum(min(i, j) for i, j in zip(rst, rst[1:]))
```


**II). Gap and Split**
| O(T): O(n) | O(S): O(n) | Rt: 112ms | 
```python
    def countBinarySubstrings(self, s: str) -> int:
        s = s.replace('10', '1 0').replace('01', '0 1')
        chunk = [len(i) for i in s.split()]
        return sum(min(i, j) for i, j in zip(chunk, chunk[1:]))
```


**III). Pair Wise**
| O(T): O(n) | O(S): O(1) | Rt: 160ms | 
```python
    def countBinarySubstrings(self, s: str) -> int:
        rst, pre, cur = 0, 0, 1
        for i in range(len(s) - 1):
            if s[i+1] == s[i]: cur += 1
            else: pre, cur = cur, 1
            if pre >= cur: rst += 1
        return rst
```
Referrence: https://leetcode.com/problems/count-binary-substrings/discuss/108600/Java-O(n)-Time-O(1)-Space
Comment; pretty similar idea as the two count solution.
Alternative: lazy update rst. | Rt: 156ms |
```python
    def countBinarySubstrings(self, s: str) -> int:
        rst, pre, cur = 0, 0, 1
        for i in range(len(s) - 1):
            if s[i+1] == s[i]: cur += 1
            else: 
                rst += min(pre, cur)
                pre, cur = cur, 1
        rst += min(pre, cur)
        return rst
```

