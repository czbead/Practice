**Get it Done, Make it Better, Share the Best -- Talse**
**I). Naive**
| O(T): O(n) | O(S): O(1) | Rt: 36ms | 
```python
    def dominantIndex(self, nums: List[int]) -> int:
        ind, maxv = -1, 0
        for i, v in enumerate(nums):
            if v >= 2 * maxv: maxv, ind = v, i
            elif v > maxv: maxv, ind = v, -1
            elif maxv < 2 * v: ind = -1
        return ind
```


**II). Find Max Two Number**
| O(T): O(n) | O(S): O(1) | Rt: 32ms | 
```python
    def dominantIndex(self, nums: List[int]) -> int:
        ind, maxv, secv= -1, -float('inf'), -float('inf')
        for i, v in enumerate(nums):
            if v > maxv: maxv, secv, ind = v, maxv, i
            elif v > secv: secv = v
        return ind if maxv >= 2 * secv else -1
```


**III). Cheat With Remove**
| O(T): O(n) | O(S): O(1) | Rt: 44ms | 
```python
    def dominantIndex(self, nums: List[int]) -> int:
        if len(nums) == 1: return 0
        maxv = max(nums)
        ind = nums.index(maxv)
        nums.remove(maxv)  #exactly one largest
        secv = max(nums)
        return ind if maxv >= 2 * secv else -1
```
