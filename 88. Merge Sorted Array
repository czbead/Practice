**Get it Done, Make it Better, Share the Best -- Talse**
**I). Two Pointer**
| O(t): O(n+m) | O(m): O(1) | Rt: 36ms | in-place
```python
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        i, i1, i2 = m + n - 1, m - 1, n - 1
        while i1 >= 0 or i2 >= 0:
            if i1 >=0 and (i2 < 0 or nums1[i1] > nums2[i2]):
                nums1[i] = nums1[i1]
                i1 -= 1
            else:
                nums1[i] = nums2[i2]
                i2 -= 1
            i -= 1
        return nums1
```
Alternative: | Rt: 36ms |
```python
    def merge(self, nums1: List[int], m: int, nums2: List[int], n: int) -> None:
        i1, i2 = m - 1, n - 1
        while i1 >= 0 or i2 >= 0:
            i = i1 + i2 + 1
            if i1 >=0 and (i2 < 0 or nums1[i1] > nums2[i2]):
                nums1[i] = nums1[i1]
                i1 -= 1
            else:
                nums1[i] = nums2[i2]
                i2 -= 1
        return nums1
```

