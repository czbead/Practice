**Get it Done, Make it Better, Share the Best -- Talse**
**I). Two Pointer**
| O(T): O(n) | O(S): O(n) | Rt: 28ms | 
```python
    def reverseOnlyLetters(self, S: str) -> str:
        s = list(S)
        l, r = 0, len(s) - 1
        while l < r:
            if not s[l].isalpha(): l += 1
            elif not s[r].isalpha(): r -= 1
            else: 
                s[l], s[r] = s[r], s[l]
                l, r = l + 1, r - 1
        return ''.join(s)
```
Alternative: | Rt: 20ms |
```python
    def reverseOnlyLetters(self, S: str) -> str:
        s = list(S)
        l, r = 0, len(s) - 1
        while l < r:
            while l < r and not s[l].isalpha(): l += 1
            while l < r and not s[r].isalpha(): r -= 1
            s[l], s[r] = s[r], s[l]
            l, r = l + 1, r - 1
        return ''.join(s)
```


**II). Collect Alpha Index**
| O(T): O(n) | O(S): O(n) | Rt: 32ms | 
```python
    def reverseOnlyLetters(self, S: str) -> str:
        s = list(S)
        index = [i for i in range(len(s)) if s[i].isalpha()]
        for i in range(len(index) // 2):
            s[index[i]], s[index[-1-i]] = s[index[-1-i]], s[index[i]]
        return ''.join(s)
```


**III). Collect Alpha, Pop Reverse**
| O(T): O(n) | O(S): O(n) | Rt: 20ms | 
```python
    def reverseOnlyLetters(self, S: str) -> str:
        alpha = [i for i in S if i.isalpha()]
        return ''.join([alpha.pop() if i.isalpha() else i for i in S])
```
Referrence: https://leetcode.com/problems/reverse-only-letters/discuss/179013/My-2-liner-Python-stack-solution

