**Get it Done, Make it Better, Share the Best -- Talse**
**I). Binary Search**
| O(T): O() | O(S): O() | Rt: 56ms | 
```python
    def findMin(self, nums: List[int]) -> int:
        l, r = 0, len(nums)-1
        while l < r:
            m = l + (r-l) // 2
            if nums[r] < nums[m]: l = m+1
            elif nums[m] < nums[r]: r = m
            else: r -= 1
        return nums[l]
```
Reference: https://leetcode.com/problems/find-minimum-in-rotated-sorted-array-ii/discuss/48808/My-pretty-simple-code-to-solve-it

Alternative: | Rt: 48ms |
```python
    def findMin(self, nums: List[int]) -> int:
        l, r = 0, len(nums)-1
        while l < r:
            if nums[l] < nums[r]: return nums[l]
            m = l + (r-l) // 2
            if nums[r] < nums[m]: l = m+1
            elif nums[m] < nums[r]: r = m
            else: r -= 1
        return nums[l]
``` 