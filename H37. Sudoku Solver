**Get it Done, Make it Better, Share the Best -- Talse**
**I). Backtracking**
| O(T): O() | O(S): O() | Rt: 808ms | 
```python
    def solveSudoku(self, board: List[List[str]]) -> None:
        def backtrack(board):
            for i in range(9):
                for j in range(9):
                    if board[i][j] == '.':
                        for k in range(9):
                            if isValid(board, i, j, str(k+1)):
                                board[i][j] = str(k+1)
                                if backtrack(board): return True
                                board[i][j] = '.'
                        return False
            return True
        
        def isValid(board, r, c, v):
            for i in range(9):
                if board[r][i] == v or board[i][c] == v: return False
                if board[r//3*3 + i//3][c//3*3 + i%3] == v: return False
            return True
            
        backtrack(board)
```
Referrence: https://leetcode.com/problems/sudoku-solver/discuss/15752/Straight-Forward-Java-Solution-Using-Backtracking

Alternative: Forward Backtracking. | Rt: 820ms |
```python
    def solveSudoku(self, board: List[List[str]]) -> None:
        def backtrack(board, r, c):
            if c == 9: return backtrack(board, r+1, 0)
            if r == 9: return True
            if board[r][c] != '.': return backtrack(board, r, c+1)
            for i in range(9):
                if isValid(board, r, c, str(i+1)):
                    board[r][c] = str(i+1)
                    if backtrack(board, r, c+1): return True
                    board[r][c] = '.'
            return False
        
        def isValid(board, r, c, v):
            row, col = r//3*3, c//3*3
            return all(board[r][i] != v and board[i][c] != v and board[row + i//3][col + i%3] != v for i in range(9))
            
        backtrack(board, 0, 0)
```
Referrence: https://leetcode.com/problems/sudoku-solver/discuss/15752/Straight-Forward-Java-Solution-Using-Backtracking/483436

Others: https://leetcode.com/problems/sudoku-solver/discuss/15796/Singapore-prime-minister-Lee-Hsien-Loong's-Sudoku-Solver-code-runs-in-1ms

