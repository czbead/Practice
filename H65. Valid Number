**Get it Done, Make it Better, Share the Best -- Talse**
**I). Naive**
| O(T): O() | O(S): O() | Rt: 28ms | 
```python
        def valid(s):
            if not s or (not s[0].isdigit() and s[0] not in '+-') or not s[-1].isdigit(): return False
            try:
                i = int(s)
            except:
                return False
            return i % 1 == 0
        
        s = s.strip()
        if not s: return False
        earr = s.split('e')
        if len(earr) > 2: return False
        if len(earr) == 2 and not valid(earr[1]): return False
        n = earr[0]
        if not n or (not n[0].isdigit() and n[0] not in '+-.') or (not n[-1].isdigit() and n[-1] != '.'): return False
        try:
            num = float(n)
        except: 
            return False
        return True
```

Alternative: | Rt: 28ms |
```python
    def isNumber(self, s: str) -> bool:
        def valid(s): return s and all(i.isdigit() for i in s)
        def trimSign(s): return s[1:] if s and s[0] in '+-' else s

        earr = s.strip().split('e')
        if len(earr) > 2 or len(earr) == 2 and not valid(trimSign(earr[1])): return False
        darr = earr[0].split('.')
        darr[0] = trimSign(darr[0])
        #edge case: '.', '.3', '3.', "+.3", " -."
        if len(darr) > 2 or not any (darr): return False
        if len(darr) == 2 and not valid('0'+darr[1]): return False
        return valid(darr[0] + '0')
```

Others: https://leetcode.com/problems/valid-number/discuss/23738/Clear-Java-solution-with-ifs; https://leetcode.com/problems/valid-number/discuss/23728/A-simple-solution-in-Python-based-on-DFA; https://leetcode.com/problems/valid-number/discuss/23762/A-simple-solution-in-cpp;

