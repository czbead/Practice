**Get it Done, Make it Better, Share the Best -- Talse**
**I). Recursive**
| O(T): O() | O(S): O() | Rt: 52ms | 
```python
    def isScramble(self, s1: str, s2: str) -> bool:
        if s1 == s2: return True
        m = [0] * 26
        for i in range(len(s1)):
            m[ord(s1[i]) - 97] += 1
            m[ord(s2[i]) - 97] -= 1
        if any(m): return False
        
        return any(self.isScramble(s1[:i], s2[:i]) and self.isScramble(s1[i:], s2[i:]) or self.isScramble(s1[:i], s2[-i:]) and self.isScramble(s1[i:], s2[:-i]) for i in range(1, len(s1)))
```

Alternative: | Rt: 48ms |
```
    def isScramble(self, s1: str, s2: str) -> bool:
        def isValid(s1, s2, l1, l2, d):
            same, m = True, [0]*26
            for i in range(d):
                if same and s1[l1+i] != s2[l2+i]: same = False
                m[ord(s1[l1+i]) - 97] += 1
                m[ord(s2[l2+i]) - 97] -= 1
            if same: return True
            if any(m): return False
            return any(isValid(s1, s2, l1, l2, i) and isValid(s1, s2, l1+i, l2+i, d-i) or isValid(s1, s2, l1, l2+d-i, i) and isValid(s1, s2, l1+i, l2, d-i) for i in range(1, d))
        
        return isValid(s1, s2, 0, 0, len(s1))
```

Triple: | Rt: 48ms |
```python
    def isScramble(self, s1: str, s2: str) -> bool:
        def isValid(s1, s2, l1, l2, d, dt):
            if (l1, l2, d) not in dt:
                same, m = True, [0]*26
                for i in range(d):
                    if same and s1[l1+i] != s2[l2+i]: same = False
                    m[ord(s1[l1+i]) - 97] += 1
                    m[ord(s2[l2+i]) - 97] -= 1
                if same: dt[(l1, l2, d)] = True
                elif any(m): dt[(l1, l2, d)] = False
                else: dt[(l1, l2, d)] = any(isValid(s1, s2, l1, l2, i, dt) and isValid(s1, s2, l1+i, l2+i, d-i, dt) or isValid(s1, s2, l1, l2+d-i, i, dt) and isValid(s1, s2, l1+i, l2, d-i, dt) for i in range(1, d))
            return dt[(l1, l2, d)]
        
        return isValid(s1, s2, 0, 0, len(s1), {})
```
Referrence: https://leetcode.com/problems/scramble-string/discuss/29392/Share-my-4ms-c%2B%2B-recursive-solution

Others: dp solution - https://leetcode.com/problems/scramble-string/discuss/29396/Simple-iterative-DP-Java-solution-with-explanation

