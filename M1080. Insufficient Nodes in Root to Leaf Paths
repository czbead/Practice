**Get it Done, Make it Better, Share the Best -- Talse**
**I). Exit at Leaf Node**
| O(T): O(n) | O(S): O(h) | Rt: 88ms | 
```python
    def sufficientSubset(self, root: TreeNode, limit: int) -> TreeNode:
        if not root: return None
        if not root.left and not root.right:
            if root.val < limit: return None
            return root
        root.left = self.sufficientSubset(root.left, limit - root.val)
        root.right = self.sufficientSubset(root.right, limit - root.val)
        return root if root.left or root.right else None
```
Referrence: https://leetcode.com/problems/insufficient-nodes-in-root-to-leaf-paths/discuss/308326/JavaC%2B%2BPython-Easy-and-Concise-Recursion

