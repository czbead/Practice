**Get it Done, Make it Better, Share the Best -- Talse**
**I). Semaphore with Barrier**
| O(T): O() | O(S): O() | Rt: 44ms | 
```python
from threading import Semaphore
from threading import Barrier
class H2O:
    def __init__(self):
        self.b = Barrier(3)
        self.h = Semaphore(2)
        self.o = Semaphore(1)

    def hydrogen(self, releaseHydrogen: 'Callable[[], None]') -> None:
        self.h.acquire()
        self.b.wait()
        # releaseHydrogen() outputs "H". Do not change or remove this line.
        releaseHydrogen()
        self.h.release()

    def oxygen(self, releaseOxygen: 'Callable[[], None]') -> None:
        self.o.acquire()
        self.b.wait()
        # releaseOxygen() outputs "O". Do not change or remove this line.
        releaseOxygen()
        self.o.release()
```
Referrence: https://leetcode.com/problems/building-h2o/discuss/420973/Python-3-Solution-with-semaphore-and-barrier
