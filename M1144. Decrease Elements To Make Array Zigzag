**Get it Done, Make it Better, Share the Best -- Talse**
**I). Naive**
| O(T): O(n) | O(S): O(1) | Rt: 28ms | 
```python
    def movesToMakeZigzag(self, nums: List[int]) -> int:
        l, odd, even = len(nums), 0, 0
        #even greater
        for i in range(0, l-2, 2):
            tmp = nums[i+1] - min(nums[i], nums[i+2])
            if tmp >= 0: even += tmp + 1
        if not l&1 and nums[-1] >= nums[-2]: even += nums[-1] - nums[-2] + 1
        #odd greater
        for i in range(1, l, 2):
            if nums[i-1] >= nums[i]: odd += nums[i-1] - nums[i] + 1
            if i + 1 < l and nums[i+1] >= nums[i]: 
                tmp, nums[i+1] = nums[i+1], nums[i]-1
                odd += tmp - nums[i+1]
        return min(odd, even)
```

Alternative: space O(n); | Rt: 32ms |
```python
    def movesToMakeZigzag(self, nums: List[int]) -> int:
        l, odd, even, copy = len(nums), 0, 0, nums[:]
        #even greater
        for i in range(0, l, 2):
            if i > 0 and copy[i-1] >= copy[i]: even += copy[i-1] - copy[i] + 1
            if i + 1 < l and copy[i+1] >= copy[i]:
                tmp, copy[i+1] = copy[i+1], copy[i]-1
                even += tmp - copy[i+1]
        #odd greater
        for i in range(1, l, 2):
            if nums[i-1] >= nums[i]: odd += nums[i-1] - nums[i] + 1
            if i + 1 < l and nums[i+1] >= nums[i]: 
                tmp, nums[i+1] = nums[i+1], nums[i]-1
                odd += tmp - nums[i+1]
        return min(odd, even)
```


**II). Short**
| O(T): O(n) | O(S): O(n) | Rt: 36ms | 
```python
    def movesToMakeZigzag(self, nums: List[int]) -> int:
        nums = [1001] + nums + [1001]
        a = b = 0
        for i in range(1, len(nums)-1):
            tmp = nums[i] - min(nums[i-1], nums[i+1]) + 1
            if tmp > 0:
                if i&1: a += tmp
                else: b += tmp
        return min(a, b)
```
Referrence: https://leetcode.com/problems/decrease-elements-to-make-array-zigzag/discuss/350576/JavaC%2B%2BPython-Easy-and-concise
