**Get it Done, Make it Better, Share the Best -- Talse**
**I). Level BFS**
| O(T): O(n) | O(S): O(n) | Rt: 308ms | 
```python
    def maxLevelSum(self, root: TreeNode) -> int:
        mx_level, mx_sum, level, stack = 1, -float('inf'), 1, [root]
        while stack:
            cursum = sum(i.val for i in stack)
            if cursum > mx_sum: mx_level, mx_sum = level, cursum
            stack = [j for i in stack for j in (i.left, i.right) if j]
            level += 1
        return mx_level
```


**II). Level Sum**
| O(T): O(n) | O(S): O(lgn) | Rt: 336ms | 
```python
    def maxLevelSum(self, root: TreeNode) -> int:
        def dfs(node, level, arr):
            if not node: return 
            if level == len(arr): arr.append(node.val)
            else: arr[level] += node.val
            dfs(node.left, level+1, arr)
            dfs(node.right, level+1, arr)
            
        arr = []
        dfs(root, 0, arr)
        ind = 0
        for i in range(len(arr)):
            if arr[i] > arr[ind]: ind = i
        return 1 + ind
```
Referrence: https://leetcode.com/problems/maximum-level-sum-of-a-binary-tree/discuss/360968/JavaPython-3-Two-codes-language%3A-BFS-level-traversal-and-DFS-level-sum.
