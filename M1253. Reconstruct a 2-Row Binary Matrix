**Get it Done, Make it Better, Share the Best -- Talse**
**I). Greedy**
| O(T): O(n) | O(S): O(1) | Rt: 744ms | 
```python
    def reconstructMatrix(self, upper: int, lower: int, colsum: List[int]) -> List[List[int]]:
        c = len(colsum)
        m = [[0] * c for _ in range(2)]
        for i in range(c): 
            if colsum[i] == 2: 
                m[0][i] = m[1][i] = 1
                upper, lower = upper-1, lower-1
            elif colsum[i] == 0: continue
            #critical, greedy, keep balance between upper and lower.
            elif upper > lower: m[0][i], upper = 1, upper-1
            else: m[1][i], lower = 1, lower-1
            if upper < 0 or lower < 0: return []
        if upper == lower == 0: return m
        return []
```

