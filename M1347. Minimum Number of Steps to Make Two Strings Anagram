**Get it Done, Make it Better, Share the Best -- Talse**
**I). Bucket Count**
| O(T): O(n) | O(S): O(1) | Rt: 364ms | 
```python
    def minSteps(self, s: str, t: str) -> int:
        ct, m = 0, [0] * 26
        for i in s: m[ord(i) - ord('a')] += 1
        for i in t: 
            ind = ord(i) - ord('a')
            if m[ind]: m[ind] -= 1
            else: ct += 1
        return ct
```

Alternative: | Rt: 328ms |
```python
    def minSteps(self, s: str, t: str) -> int:
        m, n = [0] * 26, [0] * 26
        for i in s: m[ord(i) - ord('a')] += 1
        for i in t: n[ord(i) - ord('a')] += 1
        return sum(m[i] - n[i] if n[i] < m[i] else 0 for i in range(26))
```

Triple: | Rt: 124ms |
```python
    def minSteps(self, s: str, t: str) -> int:
        cts, ctt = collections.Counter(s), collections.Counter(t)
        return sum(cts[k] - ctt[k] if cts[k] > ctt[k] else 0 for k in cts)
```
