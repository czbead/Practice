**Get it Done, Make it Better, Share the Best -- Talse**
**I). Bidirection Hashmap**
| O(T): O(1) | O(S): O(n) | Rt: 28ms | 
```python
    def __init__(self):
        self.dt_code = {}
        self.dt_url = {}
        self.url_prefix =  "http://tinyurl.com/"

    def encode(self, longUrl: str) -> str:
        if longUrl in self.dt_url: return self.url_prefix + self.dt_url[longUrl]
        while True:
            random_code = ''.join(random.choices(string.ascii_letters + string.digits+string.punctuation, k=6))
            if random_code not in self.dt_code: break
        self.dt_code[random_code] = longUrl
        self.dt_url[longUrl] = random_code
        return self.url_prefix + random_code
        
    def decode(self, shortUrl: str) -> str:
        return self.dt_code[shortUrl[-6:]]
```

Alternative: a naive random generation. | Rt: 36ms |
```python
    def __init__(self):
        self.dt_code = {}
        self.dt_url = {}
        self.url_prefix =  "http://tinyurl.com/"

    def encode(self, longUrl: str) -> str:
        if longUrl in self.dt_url: return self.url_prefix + self.dt_url[longUrl]
        while True:
            random_code = ''.join(random.choice(string.ascii_letters + string.digits+string.punctuation) for _ in range(6))
            if random_code not in self.dt_code: break
        self.dt_code[random_code] = longUrl
        self.dt_url[longUrl] = random_code
        return self.url_prefix + random_code
        
    def decode(self, shortUrl: str) -> str:
        return self.dt_code[shortUrl[-6:]]
```
Referrence: https://leetcode.com/problems/encode-and-decode-tinyurl/discuss/100268/Two-solutions-and-thoughts