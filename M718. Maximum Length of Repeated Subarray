**Get it Done, Make it Better, Share the Best -- Talse**
**I). DP: Longest Common SubString**
| O(T): O(mn) | O(S): O(mn) | Rt: 4792ms | 
```python
    def findLength(self, A: List[int], B: List[int]) -> int:
        rst, a, b = 0, len(A), len(B)
        dp = [[0] * (b+1) for _ in range(a+1)]
        for i in range(1, a+1):
            for j in range(1, b+1):
                #if not match, dp[i][j] = 0
                if A[i-1] == B[j-1]: 
                    dp[i][j] = dp[i-1][j-1] + 1
                    rst = max(rst, dp[i][j])
        return rst
```
Referrence: https://leetcode.com/problems/maximum-length-of-repeated-subarray/discuss/109039/Concise-Java-DP%3A-Same-idea-of-Longest-Common-Substring; 

Alternative: | Rt: 4236ms |
```python
    def findLength(self, A: List[int], B: List[int]) -> int:
        rst, a, b = 0, len(A), len(B)
        dp = [0] * (b+1)
        for i in range(1, a+1):
            for j in range(b, 0, -1):
                if A[i-1] == B[j-1]: 
                    dp[j] = dp[j-1] + 1
                    rst = max(rst, dp[j])
                else: dp[j] = 0
        return rst
```
Referrence: https://leetcode.com/problems/maximum-length-of-repeated-subarray/discuss/109068/JavaC%2B%2B-Clean-Code-8-lines;