**Get it Done, Make it Better, Share the Best -- Talse**
**I). Naive**
| O(T): O(n) | O(S): O(1) | Rt: 36ms | 
```python
        if not root: return [None] * k
        l, cur = 0, root
        while cur: cur, l = cur.next, l+1
        div, mod = divmod(l, k)
        rst = [div] * k
        for i in range(mod): rst[i] += 1
        cur, i = root, 0
        while i < k:
            if not rst[i]: break
            ct, rst[i] = rst[i]-1, cur
            while ct: cur, ct = cur.next, ct-1
            pre, cur = cur, cur.next
            pre.next = None
            i += 1
        while i < k: rst[i], i = None, i+1
        return rst
```

Alternative: | Rt: 28ms |
```python
    def splitListToParts(self, root: ListNode, k: int) -> List[ListNode]:
        if not root: return [None] * k
        l, cur = 0, root
        while cur: cur, l = cur.next, l+1
        div, mod = divmod(l, k)
        cur, rst = root, [None] * k
        if div == 0: k = mod
        for i in range(k):
            rst[i] = cur
            ct = div - 1
            if i < mod: ct += 1
            while ct: cur, ct = cur.next, ct-1
            pre, cur = cur, cur.next
            pre.next = None
        return rst
```

