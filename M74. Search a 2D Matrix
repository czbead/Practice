**Get it Done, Make it Better, Share the Best -- Talse**
**I). Binary Search**
| O(T): O(lgmn) | O(S): O(1) | Rt: 68ms | 
```python
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        if not matrix or not matrix[0]: return False
        if target < matrix[0][0] or target > matrix[-1][-1]: return False
        r, c = len(matrix), len(matrix[0])
        size = r * c
        l, r = 0, size - 1
        while l < r:
            m = l + (r - l) // 2
            i, j = divmod(m, c)
            if matrix[i][j] < target: l = m + 1
            else: r = m
        i, j = divmod(l, c)
        return matrix[i][j] == target
```
Alternative: | Rt: 64ms |
```python
    def searchMatrix(self, matrix: List[List[int]], target: int) -> bool:
        if not matrix or not matrix[0]: return False
        if target < matrix[0][0] or target > matrix[-1][-1]: return False
        row, col = len(matrix), len(matrix[0])
        l, r = 0, row - 1
        while l < r:
            m = l + (r - l) // 2
            if target > matrix[m][-1]: l = m + 1
            else: r = m
        rind = l
        
        if target < matrix[rind][0] or target > matrix[rind][-1]: return False
        l, r = 0, col - 1
        while l < r:
            m = l + (r - l) // 2
            if target > matrix[rind][m]: l = m + 1
            else: r = m
        return matrix[rind][l] == target
```
