**Get it Done, Make it Better, Share the Best -- Talse**
**I). Matrix Two Diagonal DP**
| O(T): O(n*n) | O(S): O() | Rt: 2380ms | 
```python
    def orderOfLargestPlusSign(self, N: int, mines: List[List[int]]) -> int:
        left, up = [[1] * N for _ in range(N)], [[1] * N for _ in range(N)]
        for i, j in mines: left[i][j] = up[i][j] = 0
        for i in range(1, N):
            for j in range(1, N):
                if left[i][j]:
                    left[i][j] = left[i][j-1] + 1
                    up[i][j] = up[i-1][j] + 1
                    
        right, down = [[1] * N for _ in range(N)], [[1] * N for _ in range(N)]
        for i, j in mines: right[i][j] = down[i][j] = 0
        for i in range(N-2, -1, -1):
            for j in range(N-2, -1, -1):
                if right[i][j]:
                    right[i][j] = right[i][j+1] + 1
                    down[i][j] = down[i+1][j] + 1
                    
        return max(min(left[i][j], right[i][j], up[i][j], down[i][j]) for i in range(N) for j in range(N))
```

Others: DP with one matrix - https://leetcode.com/problems/largest-plus-sign/discuss/113314/JavaC%2B%2BPython-O(N2)-solution-using-only-one-grid-matrix
