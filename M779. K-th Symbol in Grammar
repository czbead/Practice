**Get it Done, Make it Better, Share the Best -- Talse**
**I). Tree Row and Column**
| O(T): O() | O(S): O() | Rt: 28ms | 
```python
    def kthGrammar(self, N: int, K: int) -> int:
        #N == 1 means the first row, only the root node
        if N == 1: return 0
        #reduce row index (N) and col index (K)
        pre = self.kthGrammar(N-1, (K+1) // 2)
        #when k is odd, it is left child, otherwise right child
        if K & 1: return pre    #left child is the same as parent
        return pre ^ 1          #right child diffs with parent
```
Referrence: https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113697/My-3-lines-C%2B%2B-recursive-solution

Alternative: | Rt: 24ms |
```python
    def kthGrammar(self, N: int, K: int) -> int:
        if K == 1: return 0
        pre = self.kthGrammar(N, (K+1) // 2)
        if K & 1: return pre
        return pre ^ 1
```
Comment: the result has nothing to do with N, then we just ignore the parameter. 

Others: here is a one-line solution. It is understandable, but not very straightforward. https://leetcode.com/problems/k-th-symbol-in-grammar/discuss/113736/PythonJavaC%2B%2B-Easy-1-line-Solution-with-detailed-explanation
