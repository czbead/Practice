**Get it Done, Make it Better, Share the Best -- Talse**
**I). DFS: Backtrack**
| O(T): O() | O(S): O() | Rt: 36ms | 
```python
    def numsSameConsecDiff(self, N: int, K: int) -> List[int]:
        def dfs(N, K, digit, rst):
            if not N: 
                rst.append(int(''.join(map(str, digit)))); return
            if digit[-1] + K <= 9: 
                dfs(N-1, K, digit + [digit[-1] + K], rst)
            if digit[-1] - K >= 0: 
                dfs(N-1, K, digit + [digit[-1] - K], rst)
        
        if N == 1: return list(range(10))
        if K == 0: return [int(str(i) * N) for i in range(1, 10)]
        rst = []
        for i in range(1, 10):
            dfs(N-1, K, [i], rst)
        return rst
```

Alternative: | Rt: 40ms |
```python
    def numsSameConsecDiff(self, N: int, K: int) -> List[int]:
        def dfs(N, K, rst, digit, i):
            if i < 0 or i > 9: return
            digit.append(i)
            if not N: 
                rst.append(int(''.join(map(str, digit)))); return
            dfs(N-1, K, rst, digit[:], i+K)
            dfs(N-1, K, rst, digit[:], i-K)
        
        if N == 1: return list(range(10))
        if K == 0: return [int(str(i) * N) for i in range(1, 10)]
        rst = []
        for i in range(1, 10): dfs(N-1, K, rst, [], i)
        return rst
```


**II). BFS**
| O(T): O() | O(S): O() | Rt: 40ms | 
```python
    def numsSameConsecDiff(self, N: int, K: int) -> List[int]:
        cur = list(range(10))
        if N == 1: return cur
        if K == 0: return [int(str(i) * N) for i in range(1, 10)]
        for _ in range(N-1):
            cur = [i*10 + j for i in cur for j in (i%10 - K, i%10 + K) if i and 0<=j<=9]
        return cur
```

Alternative: | Rt: 40ms |
```python
    def numsSameConsecDiff(self, N: int, K: int) -> List[int]:
        cur = range(10)
        for _ in range(N-1):
            cur = {i*10 + j for i in cur for j in (i%10 - K, i%10 + K) if i and 0<=j<=9}
        return cur
```
Referrence: https://leetcode.com/problems/numbers-with-same-consecutive-differences/discuss/211183/JavaC%2B%2BPython-Iterative-Solution
