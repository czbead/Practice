**Get it Done, Make it Better, Share the Best -- Talse**
**I). Two Pointer**
| O(T): O(n) | O(S): O(1) | Rt: 156ms | 
```python
    def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:
        rst, i, j, la, lb = [], 0, 0, len(A), len(B)
        while i < la and j < lb:
            if A[i][1] < B[j][0]: i += 1
            elif B[j][1] < A[i][0]: j += 1
            else: 
                rst.append([max(A[i][0], B[j][0]), min(A[i][1], B[j][1])])
                if A[i][1] > B[j][1]: j += 1
                elif A[i][1] < B[j][1]: i += 1
                else: i, j = i+1, j+1
        return rst
```

Alternative: | Rt: 156ms |
```python
    def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:
        rst, i, j, la, lb = [], 0, 0, len(A), len(B)
        while i < la and j < lb:
            if A[i][1] < B[j][0]: i += 1
            elif B[j][1] < A[i][0]: j += 1
            else: 
                cur = min(A[i][1], B[j][1])
                rst.append([max(A[i][0], B[j][0]), cur])
                if A[i][1] <= cur: i += 1
                if B[j][1] <= cur: j += 1
        return rst
```

Triple: | Rt: 156ms |
```python
    def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:
        rst, i, j, la, lb = [], 0, 0, len(A), len(B)
        while i < la and j < lb:
            if A[i][1] < B[j][0]: i += 1
            elif B[j][1] < A[i][0]: j += 1
            else: 
                rst.append([max(A[i][0], B[j][0]), min(A[i][1], B[j][1])])
                if A[i][1] < B[j][1]: i += 1
                else: j += 1
        return rst
```

Forth: | Rt: 156ms |
```python
    def intervalIntersection(self, A: List[List[int]], B: List[List[int]]) -> List[List[int]]:
        rst, i, j = [], 0, 0
        while i < len(A) and j < len(B):
            l, r = max(A[i][0], B[j][0]), min(A[i][1], B[j][1])
            if l <= r: rst.append([l, r])
            if A[i][1] < B[j][1]: i += 1
            else: j += 1
        return rst
```
Referrence: https://leetcode.com/problems/interval-list-intersections/discuss/231100/Python-short-O(m%2Bn)-solution