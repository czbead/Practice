**Get it Done, Make it Better, Share the Best -- Talse**
**I). Union Find**
| O(T): O() | O(S): O() | Rt: 44ms | 
```python
    def equationsPossible(self, equations: List[str]) -> bool:
        def find(m, i):
            if m[i] != i: m[i] = find(m, m[i])
            return m[i]
            
        def union(m, i, j):
            m[find(m, j)] = find(m, i)
        
        m, noeq = list(range(26)), []
        for s in equations:
            i, j = ord(s[0]) - 97, ord(s[-1]) - 97
            if s[1] == '=': union(m, i, j)
            else: noeq.append((i, j))
        return all(find(m, i) != find(m, j) for i, j in noeq)
```

Alternative: | Rt: 48ms |
```python
    def equationsPossible(self, equations: List[str]) -> bool:
        def find(m, i):
            if m[i] != i: m[i] = find(m, m[i])
            return m[i]
            
        def union(m, i, j):
            pi, pj = find(m, i), find(m, j)
            if pi != pj: m[pi] = pj
        
        m, noeq = list(range(26)), []
        for s in equations:
            i, j = ord(s[0]) - 97, ord(s[-1]) - 97
            if s[1] == '=': union(m, i, j)
            else: noeq.append((i, j))
        return all(find(m, i) != find(m, j) for i, j in noeq)
```
Referrence: https://medium.com/100-days-of-algorithms/day-41-union-find-d0027148376d; https://leetcode.com/problems/satisfiability-of-equality-equations/discuss/234486/JavaC%2B%2BPython-Easy-Union-Find

